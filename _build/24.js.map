{"version":3,"sources":["../../src/core/settings/pages/space-usage/space-usage.module.ts","../../src/core/settings/pages/space-usage/space-usage.ts"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAsC;AACtC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;;;AAEQ;AACO;AACM;AACK;AACU;AACA;AACf;AActD;IAAA;IAA+C,CAAC;IAAnC,gCAAgC;QAZ5C,uEAAQ,CAAC;YACN,YAAY,EAAE;gBACV,gFAA0B;aAC7B;YACD,OAAO,EAAE;gBACL,2FAAoB;gBACpB,2FAAoB;gBACpB,4EAAe;gBACf,sEAAe,CAAC,QAAQ,CAAC,gFAA0B,CAAC;gBACpD,4EAAe,CAAC,QAAQ,EAAE;aAC7B;SACJ,CAAC;OACW,gCAAgC,CAAG;IAAD,uCAAC;CAAA;AAAH;;;;;;;;;AClC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAsC;AACtC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;;;;;;AAEU;AAEY;AACN;AACU;AACN;AACS;AACF;AACO;AAEnE;;GAEG;AAMH;IAQI,oCAAoB,gBAAsC,EAC1C,aAAgC,EAAU,SAAgC,EAC1E,SAA2B,EAAU,QAA8B,EAAE,WAA4B,EACjG,cAAkC;QAH9B,qBAAgB,GAAhB,gBAAgB,CAAsB;QAC1C,kBAAa,GAAb,aAAa,CAAmB;QAAU,cAAS,GAAT,SAAS,CAAuB;QAC1E,cAAS,GAAT,SAAS,CAAkB;QAAU,aAAQ,GAAR,QAAQ,CAAsB;QACnE,mBAAc,GAAd,cAAc,CAAoB;QATlD,gBAAW,GAAG,KAAK,CAAC;QACpB,UAAK,GAAG,EAAE,CAAC;QACX,kBAAa,GAAG,EAAE,CAAC;QACnB,eAAU,GAAG,CAAC,CAAC;QACf,iBAAY,GAAG,CAAC,CAAC;QAMb,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC;IAC/D,CAAC;IAED;;OAEG;IACH,mDAAc,GAAd;QAAA,iBAIC;QAHG,IAAI,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC;YACrB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACO,uDAAkB,GAA5B;QAAA,iBAuBC;QAtBG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAC,KAAK;YAClD,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YAEnB,mBAAmB;YACnB,IAAM,QAAQ,GAAG,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,SAAS;gBACtC,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;oBACtD,IAAM,MAAM,GAAG,EAAE,CAAC;oBAElB,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;wBAC/C,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;oBAClC,CAAC,CAAC,CAAC,CAAC;oBAEJ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;wBACvC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;oBAChC,CAAC,CAAC,CAAC,CAAC;oBAEJ,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACO,wDAAmB,GAA7B;QACI,IAAI,SAAS,GAAG,CAAC,EACb,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI;YACpB,SAAS,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnE,YAAY,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACrC,CAAC;IAED;;;;OAIG;IACO,8CAAS,GAAnB;QAAA,iBAMC;QALG,IAAM,QAAQ,GAAG;YACb,IAAI,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,cAAM,YAAI,CAAC,mBAAmB,EAAE,EAA1B,CAA0B,CAAC;SACnE,CAAC;QAEF,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACH,gDAAW,GAAX,UAAY,SAAc;QACtB,IAAI,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC;YACrB,SAAS,CAAC,QAAQ,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;OAKG;IACO,oDAAe,GAAzB,UAA0B,IAAS,EAAE,QAAgB;QACjD,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC3B,IAAI,CAAC,UAAU,IAAI,QAAQ,GAAG,QAAQ,CAAC;IAC3C,CAAC;IAED;;;;;OAKG;IACO,sDAAiB,GAA3B,UAA4B,IAAS;QACjC,IAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,EAAE,CAAC;QAEpE,IAAI,YAAY,GAAG,CAAC,CAAC;QAErB,IAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,UAAC,IAAI;YAClC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;gBAC7C,YAAY,IAAI,IAAI,CAAC;YACzB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;YAC9B,MAAM,CAAC,YAAY,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,sDAAiB,GAAjB,UAAkB,QAAa;QAA/B,iBA2CC;QA1CG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ;YACvD,IAAM,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;YAC3E,IAAM,OAAO,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,EAAE,EAAC,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;YAE9F,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC;gBAC3C,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;gBAET,sBAAsB;gBACtB,IAAM,YAAY,GAAG,KAAI,CAAC,aAAa,CAAC,0BAA0B,EAAE,CAAC;gBACrE,IAAM,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,UAAC,IAAI;oBACnC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBAC5C,CAAC,CAAC,CAAC;gBAEH,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC;oBACnC,KAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBACtD,KAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBAC7C,KAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oBAClC,KAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACvD,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACX,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;wBAClD,yBAAyB;wBACzB,KAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBACtD,KAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oBACtC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,qCAAqC;wBACrC,KAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,oCAAoC,EAAE,IAAI,CAAC,CAAC;wBACzE,IAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;4BAC3B,KAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;wBACzC,CAAC,CAAC,CAAC;oBACP,CAAC;gBACL,CAAC,CAAC,CAAC,OAAO,CAAC;oBACP,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;wBACnC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC;oBACjC,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC,CAAC;gBAEJ,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC,KAAK,CAAC;gBACL,uCAAuC;YAC3C,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IA9KQ,0BAA0B;QAJtC,wEAAS,CAAC;YACP,QAAQ,EAAE,gCAAgC;WACX;SAClC,CAAC;6KASwC,CAAoB;YAC3B,8EAAiB,mFAAqB,EAAqB;YAC/D,yFAAoC,EAAkD;YACjF,kBAAkB;OAXzC,0BAA0B,CA+KtC;IAAD,CAAC;AAAA;SA/KY,0BAA0B,I","file":"24.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreSettingsSpaceUsagePage } from './space-usage';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\n\n@NgModule({\n    declarations: [\n        CoreSettingsSpaceUsagePage\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule,\n        IonicPageModule.forChild(CoreSettingsSpaceUsagePage),\n        TranslateModule.forChild()\n    ],\n})\nexport class CoreSettingsSpaceUsagePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/settings/pages/space-usage/space-usage.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, } from '@angular/core';\nimport { IonicPage } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreFilepoolProvider } from '@providers/filepool';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreCourseProvider } from '@core/course/providers/course';\n\n/**\n * Page that displays the space usage settings.\n */\n@IonicPage({segment: 'core-settings-space-usage'})\n@Component({\n    selector: 'page-core-settings-space-usage',\n    templateUrl: 'space-usage.html',\n})\nexport class CoreSettingsSpaceUsagePage {\n\n    usageLoaded = false;\n    sites = [];\n    currentSiteId = '';\n    totalUsage = 0;\n    totalEntries = 0;\n\n    constructor(private filePoolProvider: CoreFilepoolProvider,\n            private sitesProvider: CoreSitesProvider, private textUtils: CoreTextUtilsProvider,\n            private translate: TranslateService, private domUtils: CoreDomUtilsProvider, appProvider: CoreAppProvider,\n            private courseProvider: CoreCourseProvider) {\n        this.currentSiteId = this.sitesProvider.getCurrentSiteId();\n    }\n\n    /**\n     * View loaded.\n     */\n    ionViewDidLoad(): void {\n        this.fetchData().finally(() => {\n            this.usageLoaded = true;\n        });\n    }\n\n    /**\n     * Convenience function to calculate each site's usage, and the total usage.\n     *\n     * @return {Promise<any>} Resolved when done.\n     */\n    protected calculateSizeUsage(): Promise<any> {\n        return this.sitesProvider.getSortedSites().then((sites) => {\n            this.sites = sites;\n\n            // Get space usage.\n            const promises = this.sites.map((siteEntry) => {\n                return this.sitesProvider.getSite(siteEntry.id).then((site) => {\n                    const proms2 = [];\n\n                    proms2.push(this.calcSiteClearRows(site).then((rows) => {\n                        siteEntry.cacheEntries = rows;\n                    }));\n\n                    proms2.push(site.getSpaceUsage().then((size) => {\n                        siteEntry.spaceUsage = size;\n                    }));\n\n                    return Promise.all(proms2);\n                });\n            });\n\n            return Promise.all(promises);\n        });\n    }\n\n    /**\n     * Convenience function to calculate total usage.\n     */\n    protected calculateTotalUsage(): void {\n        let totalSize = 0,\n            totalEntries = 0;\n        this.sites.forEach((site) => {\n            totalSize += (site.spaceUsage ? parseInt(site.spaceUsage, 10) : 0);\n            totalEntries += (site.cacheEntries ? parseInt(site.cacheEntries, 10) : 0);\n        });\n        this.totalUsage = totalSize;\n        this.totalEntries = totalEntries;\n    }\n\n    /**\n     * Convenience function to calculate space usage.\n     *\n     * @return {Promise<any>} Resolved when done.\n     */\n    protected fetchData(): Promise<any> {\n        const promises = [\n            this.calculateSizeUsage().then(() => this.calculateTotalUsage()),\n        ];\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param {any} refresher Refresher.\n     */\n    refreshData(refresher: any): void {\n        this.fetchData().finally(() => {\n            refresher.complete();\n        });\n    }\n\n    /**\n     * Convenience function to update site size, along with total usage.\n     *\n     * @param {any} site Site object with space usage.\n     * @param {number} newUsage New space usage of the site in bytes.\n     */\n    protected updateSiteUsage(site: any, newUsage: number): void {\n        const oldUsage = site.spaceUsage;\n        site.spaceUsage = newUsage;\n        this.totalUsage -= oldUsage - newUsage;\n    }\n\n    /**\n     * Calculate the number of rows to be deleted on a site.\n     *\n     * @param  {any}             site Site object.\n     * @return {Promise<number>}      If there are rows to delete or not.\n     */\n    protected calcSiteClearRows(site: any): Promise<number> {\n        const clearTables = this.sitesProvider.getSiteTableSchemasToClear();\n\n        let totalEntries = 0;\n\n        const promises = clearTables.map((name) => {\n            return site.getDb().countRecords(name).then((rows) => {\n                totalEntries += rows;\n            });\n        });\n\n        return Promise.all(promises).then(() => {\n            return totalEntries;\n        });\n    }\n\n    /**\n     * Deletes files of a site and the tables that can be cleared.\n     *\n     * @param {any} siteData Site object with space usage.\n     */\n    deleteSiteStorage(siteData: any): void {\n        this.textUtils.formatText(siteData.siteName).then((siteName) => {\n            const title = this.translate.instant('core.settings.deletesitefilestitle');\n            const message = this.translate.instant('core.settings.deletesitefiles', {sitename: siteName});\n\n            this.domUtils.showConfirm(message, title).then(() => {\n                return this.sitesProvider.getSite(siteData.id);\n            }).then((site) => {\n\n                // Clear cache tables.\n                const cleanSchemas = this.sitesProvider.getSiteTableSchemasToClear();\n                const promises = cleanSchemas.map((name) => {\n                    return site.getDb().deleteRecords(name);\n                });\n\n                promises.push(site.deleteFolder().then(() => {\n                    this.filePoolProvider.clearAllPackagesStatus(site.id);\n                    this.filePoolProvider.clearFilepool(site.id);\n                    this.updateSiteUsage(siteData, 0);\n                    this.courseProvider.clearAllCoursesStatus(site.id);\n                }).catch((error) => {\n                    if (error && error.code === FileError.NOT_FOUND_ERR) {\n                        // Not found, set size 0.\n                        this.filePoolProvider.clearAllPackagesStatus(site.id);\n                        this.updateSiteUsage(siteData, 0);\n                    } else {\n                        // Error, recalculate the site usage.\n                        this.domUtils.showErrorModal('core.settings.errordeletesitefiles', true);\n                        site.getSpaceUsage().then((size) => {\n                            this.updateSiteUsage(siteData, size);\n                        });\n                    }\n                }).finally(() => {\n                    this.calcSiteClearRows(site).then((rows) => {\n                        siteData.cacheEntries = rows;\n                    });\n                }));\n\n                return Promise.all(promises);\n            }).catch(() => {\n                // Ignore cancelled confirmation modal.\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/settings/pages/space-usage/space-usage.ts"],"sourceRoot":""}