{"version":3,"sources":["../../src/addon/calendar/pages/index/index.module.ts","../../src/addon/calendar/components/calendar/calendar.ts","../../src/addon/calendar/components/upcoming-events/upcoming-events.ts","../../src/addon/calendar/components/components.module.ts","../../src/addon/calendar/pages/index/index.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { AddonCalendarComponentsModule } from '../../components/components.module';\nimport { AddonCalendarIndexPage } from './index';\n\n@NgModule({\n    declarations: [\n        AddonCalendarIndexPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule,\n        AddonCalendarComponentsModule,\n        IonicPageModule.forChild(AddonCalendarIndexPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonCalendarIndexPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/calendar/pages/index/index.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit, Input, OnChanges, SimpleChange, Output, EventEmitter } from '@angular/core';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreLocalNotificationsProvider } from '@providers/local-notifications';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { AddonCalendarProvider } from '../../providers/calendar';\nimport { AddonCalendarHelperProvider } from '../../providers/helper';\nimport { AddonCalendarOfflineProvider } from '../../providers/calendar-offline';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\nimport { CoreAppProvider } from '@providers/app';\n\n/**\n * Component that displays a calendar.\n */\n@Component({\n    selector: 'addon-calendar-calendar',\n    templateUrl: 'addon-calendar-calendar.html',\n})\nexport class AddonCalendarCalendarComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() initialYear: number | string; // Initial year to load.\n    @Input() initialMonth: number | string; // Initial month to load.\n    @Input() courseId: number | string;\n    @Input() categoryId: number | string; // Category ID the course belongs to.\n    @Input() canNavigate?: string | boolean; // Whether to include arrows to change the month. Defaults to true.\n    @Input() displayNavButtons?: string | boolean; // Whether to display nav buttons created by this component. Defaults to true.\n    @Output() onEventClicked = new EventEmitter<number>();\n    @Output() onDayClicked = new EventEmitter<{day: number, month: number, year: number}>();\n\n    periodName: string;\n    weekDays: any[];\n    weeks: any[];\n    loaded = false;\n    timeFormat: string;\n    isCurrentMonth: boolean;\n    isPastMonth: boolean;\n\n    protected year: number;\n    protected month: number;\n    protected categoriesRetrieved = false;\n    protected categories = {};\n    protected currentSiteId: string;\n    protected offlineEvents: {[monthId: string]: {[day: number]: any[]}} = {}; // Offline events classified in month & day.\n    protected offlineEditedEventsIds = []; // IDs of events edited in offline.\n    protected deletedEvents = []; // Events deleted in offline.\n    protected currentTime: number;\n\n    // Observers.\n    protected undeleteEventObserver: any;\n    protected obsDefaultTimeChange: any;\n\n    constructor(eventsProvider: CoreEventsProvider,\n            sitesProvider: CoreSitesProvider,\n            localNotificationsProvider: CoreLocalNotificationsProvider,\n            private calendarProvider: AddonCalendarProvider,\n            private calendarHelper: AddonCalendarHelperProvider,\n            private calendarOffline: AddonCalendarOfflineProvider,\n            private domUtils: CoreDomUtilsProvider,\n            private timeUtils: CoreTimeUtilsProvider,\n            private utils: CoreUtilsProvider,\n            private coursesProvider: CoreCoursesProvider,\n            private appProvider: CoreAppProvider) {\n\n        this.currentSiteId = sitesProvider.getCurrentSiteId();\n\n        if (localNotificationsProvider.isAvailable()) {\n            // Re-schedule events if default time changes.\n            this.obsDefaultTimeChange = eventsProvider.on(AddonCalendarProvider.DEFAULT_NOTIFICATION_TIME_CHANGED, () => {\n                this.weeks.forEach((week) => {\n                    week.days.forEach((day) => {\n                        calendarProvider.scheduleEventsNotifications(day.events);\n                    });\n                });\n            }, this.currentSiteId);\n        }\n\n        // Listen for events \"undeleted\" (offline).\n        this.undeleteEventObserver = eventsProvider.on(AddonCalendarProvider.UNDELETED_EVENT_EVENT, (data) => {\n            if (data && data.eventId) {\n                // Mark it as undeleted, no need to refresh.\n                this.undeleteEvent(data.eventId);\n\n                // Remove it from the list of deleted events if it's there.\n                const index = this.deletedEvents.indexOf(data.eventId);\n                if (index != -1) {\n                    this.deletedEvents.splice(index, 1);\n                }\n            }\n        }, this.currentSiteId);\n    }\n\n    /**\n     * Component loaded.\n     */\n    ngOnInit(): void {\n        const now = new Date();\n\n        this.year = this.initialYear ? Number(this.initialYear) : now.getFullYear();\n        this.month = this.initialMonth ? Number(this.initialMonth) : now.getMonth() + 1;\n\n        this.calculateIsCurrentMonth();\n\n        this.fetchData();\n    }\n\n    /**\n     * Detect changes on input properties.\n     */\n    ngOnChanges(changes: {[name: string]: SimpleChange}): void {\n        this.canNavigate = typeof this.canNavigate == 'undefined' ? true : this.utils.isTrueOrOne(this.canNavigate);\n        this.displayNavButtons = typeof this.displayNavButtons == 'undefined' ? true :\n                this.utils.isTrueOrOne(this.displayNavButtons);\n\n        if ((changes.courseId || changes.categoryId) && this.weeks) {\n            this.filterEvents();\n        }\n    }\n\n    /**\n     * Fetch contacts.\n     *\n     * @param {boolean} [refresh=false] True if we are refreshing events.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    fetchData(refresh: boolean = false): Promise<any> {\n        const promises = [];\n\n        promises.push(this.loadCategories());\n\n        // Get offline events.\n        promises.push(this.calendarOffline.getAllEditedEvents().then((events) => {\n            // Format data.\n            events.forEach((event) => {\n                event.offline = true;\n                this.calendarHelper.formatEventData(event);\n            });\n\n            // Classify them by month.\n            this.offlineEvents = this.calendarHelper.classifyIntoMonths(events);\n\n            // Get the IDs of events edited in offline.\n            const filtered = events.filter((event) => {\n                return event.id > 0;\n            });\n            this.offlineEditedEventsIds = filtered.map((event) => {\n                return event.id;\n            });\n        }));\n\n        // Get events deleted in offline.\n        promises.push(this.calendarOffline.getAllDeletedEventsIds().then((ids) => {\n            this.deletedEvents = ids;\n        }));\n\n        // Get time format to use.\n        promises.push(this.calendarProvider.getCalendarTimeFormat().then((value) => {\n            this.timeFormat = value;\n        }));\n\n        return Promise.all(promises).then(() => {\n            return this.fetchEvents();\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n        }).finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Fetch the events for current month.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    fetchEvents(): Promise<any> {\n        // Don't pass courseId and categoryId, we'll filter them locally.\n        return this.calendarProvider.getMonthlyEvents(this.year, this.month).catch((error) => {\n            if (!this.appProvider.isOnline()) {\n                // Allow navigating to non-cached months in offline (behave as if using emergency cache).\n                return this.calendarHelper.getOfflineMonthWeeks(this.year, this.month);\n            } else {\n                return Promise.reject(error);\n            }\n        }).then((result) => {\n            // Calculate the period name. We don't use the one in result because it's in server's language.\n            this.periodName = this.timeUtils.userDate(new Date(this.year, this.month - 1).getTime(), 'core.strftimemonthyear');\n\n            this.weekDays = this.calendarProvider.getWeekDays(result.daynames[0].dayno);\n            this.weeks = result.weeks;\n\n            this.calculateIsCurrentMonth();\n\n            if (this.isCurrentMonth) {\n                const currentDay = new Date().getDate();\n                let isPast = true;\n\n                this.weeks.forEach((week) => {\n                    week.days.some((day) => {\n                        day.istoday = day.mday == currentDay;\n                        day.ispast = isPast && !day.istoday;\n                        isPast = day.ispast;\n\n                        if (day.istoday) {\n                            day.events.forEach((event) => {\n                                event.ispast = this.isEventPast(event);\n                            });\n\n                            return true;\n                        }\n\n                        return day.istoday;\n                    });\n                });\n            }\n\n            // Merge the online events with offline data.\n            this.mergeEvents();\n\n            // Filter events by course.\n            this.filterEvents();\n        });\n    }\n\n    /**\n     * Load categories to be able to filter events.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected loadCategories(): Promise<any> {\n        if (this.categoriesRetrieved) {\n            // Already retrieved, stop.\n            return Promise.resolve();\n        }\n\n        return this.coursesProvider.getCategories(0, true).then((cats) => {\n            this.categoriesRetrieved = true;\n            this.categories = {};\n\n            // Index categories by ID.\n            cats.forEach((category) => {\n                this.categories[category.id] = category;\n            });\n        }).catch(() => {\n            // Ignore errors.\n        });\n    }\n\n    /**\n     * Filter events to only display events belonging to a certain course.\n     */\n    filterEvents(): void {\n        const courseId = this.courseId ? Number(this.courseId) : undefined,\n            categoryId = this.categoryId ? Number(this.categoryId) : undefined;\n\n        this.weeks.forEach((week) => {\n            week.days.forEach((day) => {\n                if (!courseId || courseId < 0) {\n                    day.filteredEvents = day.events;\n                } else {\n                    day.filteredEvents = day.events.filter((event) => {\n                        return this.calendarHelper.shouldDisplayEvent(event, courseId, categoryId, this.categories);\n                    });\n                }\n\n                // Re-calculate some properties.\n                this.calendarHelper.calculateDayData(day, day.filteredEvents);\n            });\n        });\n    }\n\n    /**\n     * Refresh events.\n     *\n     * @param {boolean} [afterChange] Whether the refresh is done after an event has changed or has been synced.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    refreshData(afterChange?: boolean): Promise<any> {\n        const promises = [];\n\n        // Don't invalidate monthly events after a change, it has already been handled.\n        if (!afterChange) {\n            promises.push(this.calendarProvider.invalidateMonthlyEvents(this.year, this.month));\n        }\n        promises.push(this.coursesProvider.invalidateCategories(0, true));\n        promises.push(this.calendarProvider.invalidateTimeFormat());\n\n        this.categoriesRetrieved = false; // Get categories again.\n\n        return Promise.all(promises).then(() => {\n            return this.fetchData(true);\n        });\n    }\n\n    /**\n     * Load next month.\n     */\n    loadNext(): void {\n        this.increaseMonth();\n\n        this.loaded = false;\n\n        this.fetchEvents().catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n            this.decreaseMonth();\n        }).finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Load previous month.\n     */\n    loadPrevious(): void {\n        this.decreaseMonth();\n\n        this.loaded = false;\n\n        this.fetchEvents().catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n            this.increaseMonth();\n        }).finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * An event was clicked.\n     *\n     * @param {any} calendarEvent Calendar event..\n     * @param {MouseEvent} event Mouse event.\n     */\n    eventClicked(calendarEvent: any, event: MouseEvent): void {\n        this.onEventClicked.emit(calendarEvent.id);\n        event.stopPropagation();\n    }\n\n    /**\n     * A day was clicked.\n     *\n     * @param {number} day Day.\n     */\n    dayClicked(day: number): void {\n        this.onDayClicked.emit({day: day, month: this.month, year: this.year});\n    }\n\n    /**\n     * Check if user is viewing the current month.\n     */\n    calculateIsCurrentMonth(): void {\n        const now = new Date();\n\n        this.currentTime = this.timeUtils.timestamp();\n\n        this.isCurrentMonth = this.year == now.getFullYear() && this.month == now.getMonth() + 1;\n        this.isPastMonth = this.year < now.getFullYear() || (this.year == now.getFullYear() && this.month < now.getMonth() + 1);\n    }\n\n    /**\n     * Go to current month.\n     */\n    goToCurrentMonth(): void {\n        const now = new Date(),\n            initialMonth = this.month,\n            initialYear = this.year;\n\n        this.month = now.getMonth() + 1;\n        this.year = now.getFullYear();\n\n        this.loaded = false;\n\n        this.fetchEvents().then(() => {\n            this.isCurrentMonth = true;\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n            this.year = initialYear;\n            this.month = initialMonth;\n        }).finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Decrease the current month.\n     */\n    protected decreaseMonth(): void {\n        if (this.month === 1) {\n            this.month = 12;\n            this.year--;\n        } else {\n            this.month--;\n        }\n    }\n\n    /**\n     * Increase the current month.\n     */\n    protected increaseMonth(): void {\n        if (this.month === 12) {\n            this.month = 1;\n            this.year++;\n        } else {\n            this.month++;\n        }\n    }\n\n    /**\n     * Merge online events with the offline events of that period.\n     */\n    protected mergeEvents(): void {\n        const monthOfflineEvents = this.offlineEvents[this.calendarHelper.getMonthId(this.year, this.month)];\n\n        this.weeks.forEach((week) => {\n            week.days.forEach((day) => {\n\n                // Format online events.\n                day.events.forEach(this.calendarHelper.formatEventData.bind(this.calendarHelper));\n\n                // Schedule notifications for the events retrieved (only future events will be scheduled).\n                this.calendarProvider.scheduleEventsNotifications(day.events);\n\n                if (monthOfflineEvents || this.deletedEvents.length) {\n                    // There is offline data, merge it.\n\n                    if (this.deletedEvents.length) {\n                        // Mark as deleted the events that were deleted in offline.\n                        day.events.forEach((event) => {\n                            event.deleted = this.deletedEvents.indexOf(event.id) != -1;\n                        });\n                    }\n\n                    if (this.offlineEditedEventsIds.length) {\n                        // Remove the online events that were modified in offline.\n                        day.events = day.events.filter((event) => {\n                            return this.offlineEditedEventsIds.indexOf(event.id) == -1;\n                        });\n                    }\n\n                    if (monthOfflineEvents && monthOfflineEvents[day.mday]) {\n                        // Add the offline events (either new or edited).\n                        day.events = this.sortEvents(day.events.concat(monthOfflineEvents[day.mday]));\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Sort events by timestart.\n     *\n     * @param {any[]} events List to sort.\n     */\n    protected sortEvents(events: any[]): any[] {\n        return events.sort((a, b) => {\n            if (a.timestart == b.timestart) {\n                return a.timeduration - b.timeduration;\n            }\n\n            return a.timestart - b.timestart;\n        });\n    }\n\n    /**\n     * Undelete a certain event.\n     *\n     * @param {number} eventId Event ID.\n     */\n    protected undeleteEvent(eventId: number): void {\n        if (!this.weeks) {\n            return;\n        }\n\n        this.weeks.forEach((week) => {\n            week.days.forEach((day) => {\n                const event = day.events.find((event) => {\n                    return event.id == eventId;\n                });\n\n                if (event) {\n                    event.deleted = false;\n                }\n            });\n        });\n    }\n\n    /**\n     * Returns if the event is in the past or not.\n     * @param  {any}     event Event object.\n     * @return {boolean}       True if it's in the past.\n     */\n    isEventPast(event: any): boolean {\n        return (event.timestart + event.timeduration) < this.currentTime;\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        this.undeleteEventObserver && this.undeleteEventObserver.off();\n        this.obsDefaultTimeChange && this.obsDefaultTimeChange.off();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/calendar/components/calendar/calendar.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit, Input, OnChanges, SimpleChange, Output, EventEmitter } from '@angular/core';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreLocalNotificationsProvider } from '@providers/local-notifications';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { AddonCalendarProvider } from '../../providers/calendar';\nimport { AddonCalendarHelperProvider } from '../../providers/helper';\nimport { AddonCalendarOfflineProvider } from '../../providers/calendar-offline';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\nimport { CoreConstants } from '@core/constants';\n\n/**\n * Component that displays upcoming events.\n */\n@Component({\n    selector: 'addon-calendar-upcoming-events',\n    templateUrl: 'addon-calendar-upcoming-events.html',\n})\nexport class AddonCalendarUpcomingEventsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() courseId: number | string;\n    @Input() categoryId: number | string; // Category ID the course belongs to.\n    @Output() onEventClicked = new EventEmitter<number>();\n\n    filteredEvents = [];\n    loaded = false;\n\n    protected year: number;\n    protected month: number;\n    protected categoriesRetrieved = false;\n    protected categories = {};\n    protected currentSiteId: string;\n    protected events = []; // Events (both online and offline).\n    protected onlineEvents = [];\n    protected offlineEvents = []; // Offline events.\n    protected deletedEvents = []; // Events deleted in offline.\n    protected lookAhead: number;\n    protected timeFormat: string;\n\n    // Observers.\n    protected undeleteEventObserver: any;\n    protected obsDefaultTimeChange: any;\n\n    constructor(eventsProvider: CoreEventsProvider,\n            sitesProvider: CoreSitesProvider,\n            localNotificationsProvider: CoreLocalNotificationsProvider,\n            private calendarProvider: AddonCalendarProvider,\n            private calendarHelper: AddonCalendarHelperProvider,\n            private calendarOffline: AddonCalendarOfflineProvider,\n            private domUtils: CoreDomUtilsProvider,\n            private coursesProvider: CoreCoursesProvider) {\n\n        this.currentSiteId = sitesProvider.getCurrentSiteId();\n\n        if (localNotificationsProvider.isAvailable()) {\n            // Re-schedule events if default time changes.\n            this.obsDefaultTimeChange = eventsProvider.on(AddonCalendarProvider.DEFAULT_NOTIFICATION_TIME_CHANGED, () => {\n                calendarProvider.scheduleEventsNotifications(this.onlineEvents);\n            }, this.currentSiteId);\n        }\n\n        // Listen for events \"undeleted\" (offline).\n        this.undeleteEventObserver = eventsProvider.on(AddonCalendarProvider.UNDELETED_EVENT_EVENT, (data) => {\n            if (data && data.eventId) {\n                // Mark it as undeleted, no need to refresh.\n                this.undeleteEvent(data.eventId);\n\n                // Remove it from the list of deleted events if it's there.\n                const index = this.deletedEvents.indexOf(data.eventId);\n                if (index != -1) {\n                    this.deletedEvents.splice(index, 1);\n                }\n            }\n        }, this.currentSiteId);\n    }\n\n    /**\n     * Component loaded.\n     */\n    ngOnInit(): void {\n        this.fetchData();\n    }\n\n    /**\n     * Detect changes on input properties.\n     */\n    ngOnChanges(changes: {[name: string]: SimpleChange}): void {\n        if (changes.courseId || changes.categoryId) {\n            this.filterEvents();\n        }\n    }\n\n    /**\n     * Fetch data.\n     *\n     * @param {boolean} [refresh=false] True if we are refreshing events.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    fetchData(refresh: boolean = false): Promise<any> {\n        const promises = [];\n\n        promises.push(this.loadCategories());\n\n        // Get offline events.\n        promises.push(this.calendarOffline.getAllEditedEvents().then((events) => {\n            // Format data.\n            events.forEach((event) => {\n                event.offline = true;\n                this.calendarHelper.formatEventData(event);\n            });\n\n           this.offlineEvents = this.sortEvents(events);\n        }));\n\n        // Get events deleted in offline.\n        promises.push(this.calendarOffline.getAllDeletedEventsIds().then((ids) => {\n            this.deletedEvents = ids;\n        }));\n\n        // Get user preferences.\n        promises.push(this.calendarProvider.getCalendarLookAhead().then((value) => {\n            this.lookAhead = value;\n        }));\n\n        promises.push(this.calendarProvider.getCalendarTimeFormat().then((value) => {\n            this.timeFormat = value;\n        }));\n\n        return Promise.all(promises).then(() => {\n            return this.fetchEvents();\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n        }).finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Fetch upcoming events.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    fetchEvents(): Promise<any> {\n        // Don't pass courseId and categoryId, we'll filter them locally.\n        return this.calendarProvider.getUpcomingEvents().then((result) => {\n            const promises = [];\n\n            this.onlineEvents = result.events;\n\n            this.onlineEvents.forEach(this.calendarHelper.formatEventData.bind(this.calendarHelper));\n\n            // Schedule notifications for the events retrieved.\n            this.calendarProvider.scheduleEventsNotifications(this.onlineEvents);\n\n            // Merge the online events with offline data.\n            this.events = this.mergeEvents();\n\n            // Filter events by course.\n            this.filterEvents();\n\n            // Re-calculate the formatted time so it uses the device date.\n            this.events.forEach((event) => {\n                promises.push(this.calendarProvider.formatEventTime(event, this.timeFormat).then((time) => {\n                    event.formattedtime = time;\n                }));\n            });\n\n            return Promise.all(promises);\n        });\n    }\n\n    /**\n     * Load categories to be able to filter events.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected loadCategories(): Promise<any> {\n        if (this.categoriesRetrieved) {\n            // Already retrieved, stop.\n            return Promise.resolve();\n        }\n\n        return this.coursesProvider.getCategories(0, true).then((cats) => {\n            this.categoriesRetrieved = true;\n            this.categories = {};\n\n            // Index categories by ID.\n            cats.forEach((category) => {\n                this.categories[category.id] = category;\n            });\n        }).catch(() => {\n            // Ignore errors.\n        });\n    }\n\n    /**\n     * Filter events to only display events belonging to a certain course.\n     */\n    filterEvents(): void {\n        const courseId = this.courseId ? Number(this.courseId) : undefined,\n            categoryId = this.categoryId ? Number(this.categoryId) : undefined;\n\n        if (!courseId || courseId < 0) {\n            this.filteredEvents = this.events;\n        } else {\n            this.filteredEvents = this.events.filter((event) => {\n                return this.calendarHelper.shouldDisplayEvent(event, courseId, categoryId, this.categories);\n            });\n        }\n    }\n\n    /**\n     * Refresh events.\n     *\n     * @param {boolean} [afterChange] Whether the refresh is done after an event has changed or has been synced.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    refreshData(afterChange?: boolean): Promise<any> {\n        const promises = [];\n\n        // Don't invalidate upcoming events after a change, it has already been handled.\n        if (!afterChange) {\n            promises.push(this.calendarProvider.invalidateAllUpcomingEvents());\n        }\n        promises.push(this.coursesProvider.invalidateCategories(0, true));\n        promises.push(this.calendarProvider.invalidateLookAhead());\n        promises.push(this.calendarProvider.invalidateTimeFormat());\n\n        this.categoriesRetrieved = false; // Get categories again.\n\n        return Promise.all(promises).then(() => {\n            return this.fetchData(true);\n        });\n    }\n\n    /**\n     * An event was clicked.\n     *\n     * @param {any} event Event.\n     */\n    eventClicked(event: any): void {\n        this.onEventClicked.emit(event.id);\n    }\n\n    /**\n     * Merge online events with the offline events of that period.\n     *\n     * @return {any[]} Merged events.\n     */\n    protected mergeEvents(): any[] {\n        if (!this.offlineEvents.length && !this.deletedEvents.length) {\n            // No offline events, nothing to merge.\n            return this.onlineEvents;\n        }\n\n        const start = Date.now() / 1000,\n            end = start + (CoreConstants.SECONDS_DAY * this.lookAhead);\n        let result = this.onlineEvents;\n\n        if (this.deletedEvents.length) {\n            // Mark as deleted the events that were deleted in offline.\n            result.forEach((event) => {\n                event.deleted = this.deletedEvents.indexOf(event.id) != -1;\n            });\n        }\n\n        if (this.offlineEvents.length) {\n            // Remove the online events that were modified in offline.\n            result = result.filter((event) => {\n                const offlineEvent = this.offlineEvents.find((ev) => {\n                    return ev.id == event.id;\n                });\n\n                return !offlineEvent;\n            });\n        }\n\n        // Now get the offline events that belong to this period.\n        const periodOfflineEvents = this.offlineEvents.filter((event) => {\n            return (event.timestart >= start || event.timestart + event.timeduration >= start) && event.timestart <= end;\n        });\n\n        // Merge both arrays and sort them.\n        result = result.concat(periodOfflineEvents);\n\n        return this.sortEvents(result);\n    }\n\n    /**\n     * Sort events by timestart.\n     *\n     * @param {any[]} events List to sort.\n     */\n    protected sortEvents(events: any[]): any[] {\n        return events.sort((a, b) => {\n            if (a.timestart == b.timestart) {\n                return a.timeduration - b.timeduration;\n            }\n\n            return a.timestart - b.timestart;\n        });\n    }\n\n    /**\n     * Undelete a certain event.\n     *\n     * @param {number} eventId Event ID.\n     */\n    protected undeleteEvent(eventId: number): void {\n        const event = this.onlineEvents.find((event) => {\n            return event.id == eventId;\n        });\n\n        if (event) {\n            event.deleted = false;\n        }\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        this.undeleteEventObserver && this.undeleteEventObserver.off();\n        this.obsDefaultTimeChange && this.obsDefaultTimeChange.off();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/calendar/components/upcoming-events/upcoming-events.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { AddonCalendarCalendarComponent } from '../components/calendar/calendar';\nimport { AddonCalendarUpcomingEventsComponent } from '../components/upcoming-events/upcoming-events';\n\n@NgModule({\n    declarations: [\n        AddonCalendarCalendarComponent,\n        AddonCalendarUpcomingEventsComponent\n    ],\n    imports: [\n        CommonModule,\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule\n    ],\n    providers: [\n    ],\n    exports: [\n        AddonCalendarCalendarComponent,\n        AddonCalendarUpcomingEventsComponent\n    ]\n})\nexport class AddonCalendarComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/calendar/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OFx ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild, NgZone } from '@angular/core';\nimport { IonicPage, NavParams, NavController } from 'ionic-angular';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreLocalNotificationsProvider } from '@providers/local-notifications';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { AddonCalendarProvider } from '../../providers/calendar';\nimport { AddonCalendarOfflineProvider } from '../../providers/calendar-offline';\nimport { AddonCalendarHelperProvider } from '../../providers/helper';\nimport { AddonCalendarCalendarComponent } from '../../components/calendar/calendar';\nimport { AddonCalendarUpcomingEventsComponent } from '../../components/upcoming-events/upcoming-events';\nimport { AddonCalendarSyncProvider } from '../../providers/calendar-sync';\nimport { CoreCoursesHelperProvider } from '@core/courses/providers/helper';\nimport { Network } from '@ionic-native/network';\n\n/**\n * Page that displays the calendar events.\n */\n@IonicPage({ segment: 'addon-calendar-index' })\n@Component({\n    selector: 'page-addon-calendar-index',\n    templateUrl: 'index.html',\n})\nexport class AddonCalendarIndexPage implements OnInit, OnDestroy {\n    @ViewChild(AddonCalendarCalendarComponent) calendarComponent: AddonCalendarCalendarComponent;\n    @ViewChild(AddonCalendarUpcomingEventsComponent) upcomingEventsComponent: AddonCalendarUpcomingEventsComponent;\n\n    protected eventId: number;\n    protected currentSiteId: string;\n\n    // Observers.\n    protected newEventObserver: any;\n    protected discardedObserver: any;\n    protected editEventObserver: any;\n    protected deleteEventObserver: any;\n    protected undeleteEventObserver: any;\n    protected syncObserver: any;\n    protected manualSyncObserver: any;\n    protected onlineObserver: any;\n\n    year: number;\n    month: number;\n    courseId: number;\n    categoryId: number;\n    canCreate = false;\n    courses: any[];\n    notificationsEnabled = false;\n    loaded = false;\n    hasOffline = false;\n    isOnline = false;\n    syncIcon: string;\n    showCalendar = true;\n    loadUpcoming = false;\n\n    constructor(localNotificationsProvider: CoreLocalNotificationsProvider,\n            navParams: NavParams,\n            network: Network,\n            zone: NgZone,\n            sitesProvider: CoreSitesProvider,\n            private navCtrl: NavController,\n            private domUtils: CoreDomUtilsProvider,\n            private calendarProvider: AddonCalendarProvider,\n            private calendarOffline: AddonCalendarOfflineProvider,\n            private calendarHelper: AddonCalendarHelperProvider,\n            private calendarSync: AddonCalendarSyncProvider,\n            private eventsProvider: CoreEventsProvider,\n            private coursesHelper: CoreCoursesHelperProvider,\n            private appProvider: CoreAppProvider) {\n\n        this.courseId = navParams.get('courseId');\n        this.eventId = navParams.get('eventId') || false;\n        this.year = navParams.get('year');\n        this.month = navParams.get('month');\n        this.notificationsEnabled = localNotificationsProvider.isAvailable();\n        this.currentSiteId = sitesProvider.getCurrentSiteId();\n        this.loadUpcoming = !!navParams.get('upcoming');\n        this.showCalendar = !this.loadUpcoming;\n\n        // Listen for events added. When an event is added, reload the data.\n        this.newEventObserver = eventsProvider.on(AddonCalendarProvider.NEW_EVENT_EVENT, (data) => {\n            if (data && data.event) {\n                this.loaded = false;\n                this.refreshData(true, false, true);\n            }\n        }, this.currentSiteId);\n\n        // Listen for new event discarded event. When it does, reload the data.\n        this.discardedObserver = eventsProvider.on(AddonCalendarProvider.NEW_EVENT_DISCARDED_EVENT, () => {\n            this.loaded = false;\n            this.refreshData(true, false, true);\n        }, this.currentSiteId);\n\n        // Listen for events edited. When an event is edited, reload the data.\n        this.editEventObserver = eventsProvider.on(AddonCalendarProvider.EDIT_EVENT_EVENT, (data) => {\n            if (data && data.event) {\n                this.loaded = false;\n                this.refreshData(true, false, true);\n            }\n        }, this.currentSiteId);\n\n        // Refresh data if calendar events are synchronized automatically.\n        this.syncObserver = eventsProvider.on(AddonCalendarSyncProvider.AUTO_SYNCED, (data) => {\n            this.loaded = false;\n            this.refreshData(false, false, true);\n        }, this.currentSiteId);\n\n        // Refresh data if calendar events are synchronized manually but not by this page.\n        this.manualSyncObserver = eventsProvider.on(AddonCalendarSyncProvider.MANUAL_SYNCED, (data) => {\n            if (data && data.source != 'index') {\n                this.loaded = false;\n                this.refreshData(false, false, true);\n            }\n        }, this.currentSiteId);\n\n        // Update the events when an event is deleted.\n        this.deleteEventObserver = eventsProvider.on(AddonCalendarProvider.DELETED_EVENT_EVENT, (data) => {\n            this.loaded = false;\n            this.refreshData(false, false, true);\n        }, this.currentSiteId);\n\n        // Update the \"hasOffline\" property if an event deleted in offline is restored.\n        this.undeleteEventObserver = eventsProvider.on(AddonCalendarProvider.UNDELETED_EVENT_EVENT, (data) => {\n            this.calendarOffline.hasOfflineData().then((hasOffline) => {\n                this.hasOffline = hasOffline;\n            });\n        }, this.currentSiteId);\n\n        // Refresh online status when changes.\n        this.onlineObserver = network.onchange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            zone.run(() => {\n                this.isOnline = this.appProvider.isOnline();\n            });\n        });\n    }\n\n    /**\n     * View loaded.\n     */\n    ngOnInit(): void {\n        if (this.eventId) {\n            // There is an event to load, open the event in a new state.\n            this.gotoEvent(this.eventId);\n        }\n\n        this.fetchData(true, false);\n    }\n\n    /**\n     * Fetch all the data required for the view.\n     *\n     * @param {boolean} [sync] Whether it should try to synchronize offline events.\n     * @param {boolean} [showErrors] Whether to show sync errors to the user.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    fetchData(sync?: boolean, showErrors?: boolean): Promise<any> {\n\n        this.syncIcon = 'spinner';\n        this.isOnline = this.appProvider.isOnline();\n\n        let promise;\n\n        if (sync) {\n            // Try to synchronize offline events.\n            promise = this.calendarSync.syncEvents().then((result) => {\n                if (result.warnings && result.warnings.length) {\n                    this.domUtils.showErrorModal(result.warnings[0]);\n                }\n\n                if (result.updated) {\n                    // Trigger a manual sync event.\n                    result.source = 'index';\n\n                    this.eventsProvider.trigger(AddonCalendarSyncProvider.MANUAL_SYNCED, result, this.currentSiteId);\n                }\n            }).catch((error) => {\n                if (showErrors) {\n                    this.domUtils.showErrorModalDefault(error, 'core.errorsync', true);\n                }\n            });\n        } else {\n            promise = Promise.resolve();\n        }\n\n        return promise.then(() => {\n            const promises = [];\n\n            this.hasOffline = false;\n\n            // Load courses for the popover.\n            promises.push(this.coursesHelper.getCoursesForPopover(this.courseId).then((data) => {\n                this.courses = data.courses;\n                this.categoryId = data.categoryId;\n            }));\n\n            // Check if user can create events.\n            promises.push(this.calendarHelper.canEditEvents(this.courseId).then((canEdit) => {\n                this.canCreate = canEdit;\n            }));\n\n            // Check if there is offline data.\n            promises.push(this.calendarOffline.hasOfflineData().then((hasOffline) => {\n                this.hasOffline = hasOffline;\n            }));\n\n            return Promise.all(promises);\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n        }).finally(() => {\n            this.loaded = true;\n            this.syncIcon = 'sync';\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param {any} [refresher] Refresher.\n     * @param {Function} [done] Function to call when done.\n     * @param {boolean} [showErrors] Whether to show sync errors to the user.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    doRefresh(refresher?: any, done?: () => void, showErrors?: boolean): Promise<any> {\n        if (this.loaded) {\n            return this.refreshData(true, showErrors).finally(() => {\n                refresher && refresher.complete();\n                done && done();\n            });\n        }\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param {boolean} [sync] Whether it should try to synchronize offline events.\n     * @param {boolean} [showErrors] Whether to show sync errors to the user.\n     * @param {boolean} [afterChange] Whether the refresh is done after an event has changed or has been synced.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    refreshData(sync?: boolean, showErrors?: boolean, afterChange?: boolean): Promise<any> {\n        this.syncIcon = 'spinner';\n\n        const promises = [];\n\n        promises.push(this.calendarProvider.invalidateAllowedEventTypes());\n\n        // Refresh the sub-component.\n        if (this.showCalendar && this.calendarComponent) {\n            promises.push(this.calendarComponent.refreshData(afterChange));\n        } else if (!this.showCalendar && this.upcomingEventsComponent) {\n            promises.push(this.upcomingEventsComponent.refreshData(afterChange));\n        }\n\n        return Promise.all(promises).finally(() => {\n            return this.fetchData(sync, showErrors);\n        });\n    }\n\n    /**\n     * Navigate to a particular event.\n     *\n     * @param {number} eventId Event to load.\n     */\n    gotoEvent(eventId: number): void {\n        if (eventId < 0) {\n            // It's an offline event, go to the edit page.\n            this.openEdit(eventId);\n        } else {\n            this.navCtrl.push('AddonCalendarEventPage', {\n                id: eventId\n            });\n        }\n    }\n\n    /**\n     * View a certain day.\n     *\n     * @param {any} data Data with the year, month and day.\n     */\n    gotoDay(data: any): void {\n        const params: any = {\n            day: data.day,\n            month: data.month,\n            year: data.year\n        };\n\n        if (this.courseId) {\n            params.courseId = this.courseId;\n        }\n\n        this.navCtrl.push('AddonCalendarDayPage', params);\n    }\n\n    /**\n     * Show the context menu.\n     *\n     * @param {MouseEvent} event Event.\n     */\n    openCourseFilter(event: MouseEvent): void {\n        this.coursesHelper.selectCourse(event, this.courses, this.courseId).then((result) => {\n            if (typeof result.courseId != 'undefined') {\n                this.courseId = result.courseId > 0 ? result.courseId : undefined;\n                this.categoryId = result.courseId > 0 ? result.categoryId : undefined;\n\n                // Course viewed has changed, check if the user can create events for this course calendar.\n                this.calendarHelper.canEditEvents(this.courseId).then((canEdit) => {\n                    this.canCreate = canEdit;\n                });\n            }\n        });\n    }\n\n    /**\n     * Open page to create/edit an event.\n     *\n     * @param {number} [eventId] Event ID to edit.\n     */\n    openEdit(eventId?: number): void {\n        const params: any = {};\n\n        if (eventId) {\n            params.eventId = eventId;\n        }\n        if (this.courseId) {\n            params.courseId = this.courseId;\n        }\n\n        this.navCtrl.push('AddonCalendarEditEventPage', params);\n    }\n\n    /**\n     * Open calendar events settings.\n     */\n    openSettings(): void {\n        this.navCtrl.push('AddonCalendarSettingsPage');\n    }\n\n    /**\n     * Toogle display: monthly view or upcoming events.\n     */\n    toggleDisplay(): void {\n        this.showCalendar = !this.showCalendar;\n\n        if (!this.showCalendar) {\n            this.loadUpcoming = true;\n        }\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.newEventObserver && this.newEventObserver.off();\n        this.discardedObserver && this.discardedObserver.off();\n        this.editEventObserver && this.editEventObserver.off();\n        this.deleteEventObserver && this.deleteEventObserver.off();\n        this.undeleteEventObserver && this.undeleteEventObserver.off();\n        this.syncObserver && this.syncObserver.off();\n        this.manualSyncObserver && this.manualSyncObserver.off();\n        this.onlineObserver && this.onlineObserver.unsubscribe();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/calendar/pages/index/index.ts"],"sourceRoot":""}